name: Appointments API CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DEFAULT_CONNECTION: ${{ secrets.POSTGRES_CONNECTION }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_PROJECT_NAME: ${{ secrets.SONAR_PROJECT_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore ./InnoClinic.AppointmentsAPI
      
    - name: Build
      run: dotnet build ./InnoClinic.AppointmentsAPI --no-restore --configuration Release

    - name: Test
      run: dotnet test ./InnoClinic.AppointmentsAPI --no-build --verbosity normal --configuration Release

  analyze:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Sonar Scan
      uses: highbyte/sonarscan-dotnet@v2.3.0
      with:
        sonarProjectKey: ${{ secrets.SONAR_PROJECT_KEY }}
        sonarProjectName: ${{ secrets.SONAR_PROJECT_NAME }}
        sonarOrganization: ${{ secrets.SONAR_ORGANIZATION }}
        dotnetBuildArguments: ./InnoClinic.AppointmentsAPI --configuration Release
        dotnetTestArguments: ./InnoClinic.AppointmentsAPI --no-build --configuration Release --verbosity normal --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        sonarBeginArguments: >-
          /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml"
          /d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
          /d:sonar.coverage.exclusions="**/Program.cs,**/Migrations/*,**/DI/*,**/Context/*,**/Profiles/*,**/Repositories/*"

      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        DEFAULT_CONNECTION: ${{ secrets.POSTGRES_CONNECTION }}